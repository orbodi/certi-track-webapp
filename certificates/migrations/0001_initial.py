# Generated by Django 4.2.24 on 2025-10-01 11:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Certificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "common_name",
                    models.CharField(
                        help_text="Nom du serveur (ex: jenkins.eid.local)",
                        max_length=255,
                        verbose_name="Délivré à",
                    ),
                ),
                (
                    "issuer",
                    models.CharField(
                        help_text="Autorité de certification (ex: eid-CA-01-CA)",
                        max_length=255,
                        verbose_name="Délivré par",
                    ),
                ),
                (
                    "valid_until",
                    models.DateTimeField(
                        help_text="Date d'expiration du certificat",
                        verbose_name="Date d'expiration",
                    ),
                ),
                (
                    "key_usage",
                    models.CharField(
                        blank=True,
                        help_text="Ex: Authentification du serveur",
                        max_length=255,
                        null=True,
                        verbose_name="Rôles prévus",
                    ),
                ),
                (
                    "friendly_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Nom convivial",
                    ),
                ),
                (
                    "template_name",
                    models.CharField(
                        blank=True,
                        help_text="Ex: CertSSLIdemia, ADFS_IDEMIA",
                        max_length=100,
                        null=True,
                        verbose_name="Modèle de certificat",
                    ),
                ),
                (
                    "valid_from",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valide depuis"
                    ),
                ),
                (
                    "san_list",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Liste des Subject Alternative Names",
                        verbose_name="SAN (domaines alternatifs)",
                    ),
                ),
                (
                    "serial_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Numéro de série",
                    ),
                ),
                (
                    "fingerprint_sha256",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="Empreinte SHA256",
                    ),
                ),
                (
                    "signature_algorithm",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Algorithme de signature",
                    ),
                ),
                (
                    "public_key_size",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Taille clé publique (bits)"
                    ),
                ),
                (
                    "pem_data",
                    models.TextField(
                        blank=True,
                        help_text="Contenu complet du certificat au format PEM",
                        null=True,
                        verbose_name="Certificat PEM",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Actif"),
                            ("expiring_soon", "Expire Bientôt"),
                            ("expired", "Expiré"),
                            ("revoked", "Révoqué"),
                            ("unknown", "Inconnu"),
                        ],
                        default="unknown",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "is_self_signed",
                    models.BooleanField(default=False, verbose_name="Auto-signé"),
                ),
                (
                    "is_ca_certificate",
                    models.BooleanField(default=False, verbose_name="Certificat CA"),
                ),
                (
                    "import_method",
                    models.CharField(
                        choices=[
                            ("manual", "Saisie Manuelle"),
                            ("csv", "Import CSV"),
                            ("scan", "Scan Domaine"),
                        ],
                        max_length=10,
                        verbose_name="Méthode d'import",
                    ),
                ),
                (
                    "needs_enrichment",
                    models.BooleanField(
                        default=False,
                        help_text="Coché si le certificat doit être scanné pour enrichissement",
                        verbose_name="Nécessite enrichissement",
                    ),
                ),
                (
                    "last_scanned",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Dernier scan"
                    ),
                ),
                (
                    "scan_error",
                    models.TextField(
                        blank=True, null=True, verbose_name="Erreur de scan"
                    ),
                ),
                (
                    "scan_port",
                    models.IntegerField(
                        default=443,
                        help_text="Port utilisé pour le scan SSL/TLS",
                        verbose_name="Port de scan",
                    ),
                ),
                (
                    "environment",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("prod", "Production"),
                            ("uat", "UAT"),
                            ("test", "Test"),
                            ("dev", "Développement"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Environnement",
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Tags personnalisés pour catégorisation",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="certificates_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Certificat",
                "verbose_name_plural": "Certificats",
                "ordering": ["valid_until", "common_name"],
                "indexes": [
                    models.Index(
                        fields=["valid_until"], name="certificate_valid_u_16a696_idx"
                    ),
                    models.Index(
                        fields=["common_name"], name="certificate_common__b34bfd_idx"
                    ),
                    models.Index(
                        fields=["issuer"], name="certificate_issuer_2295f3_idx"
                    ),
                    models.Index(
                        fields=["status"], name="certificate_status_31e804_idx"
                    ),
                    models.Index(
                        fields=["environment"], name="certificate_environ_05a407_idx"
                    ),
                ],
            },
        ),
    ]
