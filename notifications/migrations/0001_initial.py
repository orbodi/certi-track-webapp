# Generated by Django 4.2.24 on 2025-10-01 11:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("certificates", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "from_email",
                    models.EmailField(
                        default="noreply@certitrack.local",
                        max_length=254,
                        verbose_name="Email expéditeur",
                    ),
                ),
                (
                    "from_name",
                    models.CharField(
                        default="CertiTrack",
                        max_length=100,
                        verbose_name="Nom expéditeur",
                    ),
                ),
                (
                    "default_recipients",
                    models.TextField(
                        blank=True,
                        help_text="Un email par ligne (utilisé si aucune règle ne correspond)",
                        verbose_name="Destinataires par défaut",
                    ),
                ),
                (
                    "enable_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Activer les notifications"
                    ),
                ),
                (
                    "daily_summary_enabled",
                    models.BooleanField(
                        default=True, verbose_name="Résumé quotidien activé"
                    ),
                ),
                (
                    "daily_summary_time",
                    models.TimeField(
                        default="08:00", verbose_name="Heure du résumé quotidien"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Configuration Email",
                "verbose_name_plural": "Configuration Email",
            },
        ),
        migrations.CreateModel(
            name="NotificationRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Ex: Alerte 30 jours",
                        max_length=100,
                        verbose_name="Nom de la règle",
                    ),
                ),
                (
                    "days_before_expiration",
                    models.IntegerField(
                        help_text="Nombre de jours avant expiration pour déclencher l'alerte",
                        verbose_name="Jours avant expiration",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("webhook", "Webhook"),
                            ("both", "Email + Webhook"),
                        ],
                        default="email",
                        max_length=10,
                        verbose_name="Type de notification",
                    ),
                ),
                (
                    "email_recipients",
                    models.TextField(
                        blank=True,
                        help_text="Un email par ligne",
                        verbose_name="Destinataires email",
                    ),
                ),
                (
                    "email_subject",
                    models.CharField(
                        default="⚠️ Certificat SSL/TLS expire bientôt",
                        max_length=200,
                        verbose_name="Sujet de l'email",
                    ),
                ),
                (
                    "webhook_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="URL du Webhook"
                    ),
                ),
                (
                    "filter_by_environment",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("prod", "Production"),
                            ("uat", "UAT"),
                            ("test", "Test"),
                            ("dev", "Développement"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Filtrer par environnement",
                    ),
                ),
                (
                    "filter_by_issuer",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Filtrer par émetteur",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notification_rules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Règle de notification",
                "verbose_name_plural": "Règles de notification",
                "ordering": ["days_before_expiration"],
            },
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(max_length=10, verbose_name="Type"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("sent", "Envoyée"),
                            ("failed", "Échec"),
                        ],
                        default="pending",
                        max_length=10,
                        verbose_name="Statut",
                    ),
                ),
                ("recipients", models.TextField(verbose_name="Destinataires")),
                ("subject", models.CharField(max_length=200, verbose_name="Sujet")),
                ("message", models.TextField(blank=True, verbose_name="Message")),
                (
                    "error_message",
                    models.TextField(
                        blank=True, null=True, verbose_name="Message d'erreur"
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Envoyé le"),
                ),
                (
                    "certificate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_logs",
                        to="certificates.certificate",
                        verbose_name="Certificat",
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notification_logs",
                        to="notifications.notificationrule",
                        verbose_name="Règle appliquée",
                    ),
                ),
            ],
            options={
                "verbose_name": "Journal de notification",
                "verbose_name_plural": "Journal des notifications",
                "ordering": ["-sent_at"],
            },
        ),
    ]
